{"version":3,"sources":["Redux/Persons/PersonsReducer.ts","Component/ChartList/charListsStyle.module.scss","Component/Header/HeaderComponent.tsx","appStyles.module.scss","Component/Header/haderStyle.module.scss","Redux/CharList/CharListReducer.ts","Redux/location/LocationReducer.ts","enum/Routing.ts","Component/ChartList/CharacterComponent.tsx","Component/ChartList/ChartListContainer.tsx","img/Ellipsis-4.2s-197px.svg","common/preloader/Preloader.tsx","common/withSuspense/withSuspense.tsx","Component/Location/LocationComponent.tsx","App.tsx","Redux/CharList/Sagas.ts","Redux/Persons/Sagas.ts","Redux/location/Sagas.ts","Redux/sagaWatcher.ts","Redux/Store.ts","index.tsx"],"names":["ActionType","initialState","data","setPerson","type","SET_PERSON","payload","setPersonIdSaga","id","REQUEST_PERSON","PersonReducer","state","action","module","exports","HeaderComponent","title","className","style","body","isFetching","isFetchingLoader","IS_FETCHING","charListReducer","SET_CHARS","REQUEST_CHARS_NEXT_PAGE","residents","RoutingType","setLocationIdSaga","REQUEST_LOCATION","LocationReducer","SET_LOCATION","GET_RESIDENTS","CharacterComponent","chars","dispatch","useDispatch","locationId","location","url","replace","console","log","items","wrapperItem","src","image","alt","name","to","onClick","status","species","headlineCard","ChartListContainer","memo","useSelector","charList","fetching","useState","pages","setPages","useEffect","nextPage","REQUEST_CHARS","scrollHandler","e","next","target","documentElement","scrollHeight","scrollTop","window","innerHeight","NEXT_PAGE","p","document","addEventListener","removeEventListener","map","item","Preloader","preloader","withSuspense","WrappedComponent","props","fallback","LocationComponent","loc","person","useParams","idResident","resident","created","dimension","index","PersonsContainer","lazy","App","root","exact","path","render","personId","error","from","getChars","nextChars","fetchGetChars","a","fetch","res","json","put","call","results","getPersons","fetchGetPerson","getLocation","getResident","fetchGetLocation","fetchGetResidents","sagaWatcher","takeEvery","EnumCharList","EnumPerson","EnumLocation","REQUEST_GET_RESIDENTS","reducer","combineReducers","CharListReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36987ca9.chunk.js","sourcesContent":["export interface charsResponseType {\r\n    id: number,\r\n    name: string,\r\n    status: \"alive\" | \"dead\" | \"unknown\",\r\n    species: string,\r\n    type: string,\r\n    image: string,\r\n    gender: \"female\" | \"male\" | \"unknown\",\r\n    origin: {\r\n        name: string,\r\n        url: string,\r\n    },\r\n    location: {\r\n        name: string,\r\n        url: string,\r\n    },\r\n    episode: string[],\r\n    created: string,\r\n\r\n\r\n}\r\n\r\nexport interface stateProps {\r\n    data: charsResponseType | null\r\n\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    data: null,\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_PERSON = \"PERSON-CONTAINER/SET-PERSON\",\r\n\r\n\r\n    //sagaRequest\r\n    REQUEST_PERSON = \"/CHARACTER-CONTAINER/REQUEST_PERSON\",\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n//ActionCreator\r\nexport const setPerson = (data: charsResponseType): Action<charsResponseType> => ({\r\n    type: ActionType.SET_PERSON,\r\n    payload: data\r\n})\r\n\r\n\r\n\r\n\r\n//sagaCreator\r\nexport const setPersonIdSaga = (id: number) : {type: ActionType.REQUEST_PERSON, payload: number} => ({\r\n    type: ActionType.REQUEST_PERSON,\r\n    payload: id\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PersonReducer = (state: stateProps = initialState, action: Action<charsResponseType>): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_PERSON:{\r\n            debugger\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        }\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport default PersonReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"charListsStyle_body__1bRyu\",\"wrapperItem\":\"charListsStyle_wrapperItem__2iWfQ\",\"items\":\"charListsStyle_items__3CUUn\",\"imagesBlock\":\"charListsStyle_imagesBlock__2_XOs\",\"headlineCard\":\"charListsStyle_headlineCard__1-7h2\",\"alive\":\"charListsStyle_alive__2sJLn\",\"dead\":\"charListsStyle_dead__3JpAc\"};","import {FC} from \"react\";\r\nimport style from './haderStyle.module.scss'\r\n\r\n\r\ninterface Props {\r\n    title: string | undefined\r\n\r\n\r\n}\r\n\r\n\r\nconst HeaderComponent: FC <Props>= ({\r\n    title\r\n                                    }) => {\r\n    return (<div className={style.body}>\r\n        <h1>{title}</h1>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default HeaderComponent","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"appStyles_body__k8keh\",\"root\":\"appStyles_root__3YxLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"haderStyle_body__1CCKz\"};","import {charsResponseType} from \"../Persons/PersonsReducer\";\r\n\r\n\r\nexport interface stateProps {\r\n    data: charsResponseType[]\r\n    isFetching: boolean\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    data: [],\r\n    isFetching: false\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_CHARS = \"CHARACTER-COMPONENT/SET-CHARS\",\r\n    IS_FETCHING = \"IN_GLOBAL\",\r\n    NEXT_PAGE = 'CHARACTER-COMPONENT/NEXT_PAGE',\r\n\r\n\r\n    //sagaRequest\r\n    REQUEST_CHARS = \"/CHARACTER-CONTAINER/REQUEST_CHARS\",\r\n    REQUEST_CHARS_NEXT_PAGE = 'CHARACTER_CONTAINER/REQUEST_CHARS_NEXT_PAGE',\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n//ActionCreator\r\n//inGlobal\r\nexport const isFetchingLoader = (isFetching: boolean): Action<boolean> => ({\r\n    type: ActionType.IS_FETCHING,\r\n    payload: isFetching\r\n})\r\n\r\n\r\n//for Request\r\nexport const setChars = (chars: charsResponseType[]): Action<charsResponseType[]> => ({\r\n    type: ActionType.SET_CHARS,\r\n    payload: chars\r\n})\r\n\r\n\r\nexport const nextPagesCall = (next: number): Action<number> => ({\r\n    type: ActionType.NEXT_PAGE,\r\n    payload: next\r\n})\r\n\r\n\r\n//sagaCreator\r\nexport const setCharsSaga = (nextPage: number): { type: ActionType.REQUEST_CHARS, payload: number } => ({\r\n    type: ActionType.REQUEST_CHARS,\r\n    payload: nextPage\r\n\r\n})\r\nexport const addCharsSaga = (chars: charsResponseType[]): Action<charsResponseType[]> => ({\r\n    type: ActionType.REQUEST_CHARS_NEXT_PAGE,\r\n    payload: chars\r\n})\r\n\r\n\r\n\r\n\r\nconst charListReducer = (state: stateProps = initialState, action: Action<charsResponseType[] & boolean>): stateProps => {\r\n    switch (action.type) {\r\n        //getChars from response\r\n        case ActionType.SET_CHARS:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        case ActionType.REQUEST_CHARS_NEXT_PAGE:\r\n            return {\r\n                ...state, data: [...state.data, ...action.payload]\r\n            };\r\n        //isLoader fetching for brake call\r\n        case ActionType.IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport default charListReducer\r\n\r\n","import {charsResponseType} from \"../Persons/PersonsReducer\";\r\n\r\nexport interface locationResponseType {\r\n    id: number,\r\n    name: string,\r\n    type: string\r\n    dimension: string\r\n    \"residents\": [\r\n        string\r\n    ],\r\n    url: string\r\n    created:string\r\n\r\n\r\n}\r\n\r\nexport interface stateProps {\r\n    data: locationResponseType | null,\r\n    residents: charsResponseType[] | null\r\n\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    data: null,\r\n    residents : null,\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_LOCATION = \"LOCATION-COMPONENT/SET_LOCATION\",\r\n    GET_RESIDENTS = 'LOCATION_COMPONENT/GET_RESIDENTS',\r\n\r\n\r\n    //sagaRequest\r\n    REQUEST_LOCATION = \"LOCATION-COMPONENT/REQUEST_LOCATION\",\r\n    REQUEST_GET_RESIDENTS = 'LOCATION_COMPONENT/REQUEST_GET_RESIDENTS',\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n//ActionCreator\r\nexport const setLocation = (data: locationResponseType): Action<locationResponseType> => ({\r\n    type: ActionType.SET_LOCATION,\r\n    payload: data\r\n})\r\n\r\n\r\nexport const setResidents = (resident: charsResponseType ) : Action<charsResponseType> => ({\r\n    type: ActionType.GET_RESIDENTS,\r\n    payload: resident\r\n})\r\n\r\n\r\n\r\n\r\n//sagaCreator\r\nexport const setLocationIdSaga = (id: number) : {type: ActionType.REQUEST_LOCATION, payload: number} => ({\r\n    type: ActionType.REQUEST_LOCATION,\r\n    payload: id\r\n\r\n})\r\n\r\nexport const getResidentsSaga = (id: number | undefined) : {type: ActionType.REQUEST_GET_RESIDENTS, payload: number | undefined} => ({\r\n    type: ActionType.REQUEST_GET_RESIDENTS,\r\n    payload: id\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LocationReducer = (state: stateProps = initialState, action: Action<locationResponseType & charsResponseType[]>): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_LOCATION:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        case ActionType.GET_RESIDENTS:\r\n            return  {\r\n                ...state, residents: action.payload\r\n            }\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport default LocationReducer","export enum RoutingType {\r\n    person=\"/person\",\r\n    personId = \"/person/:id\",\r\n    locationId = \"/location/:id\",\r\n    location = \"/location\",\r\n    error=\"/404\"\r\n}","import {FC} from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {charsResponseType, setPersonIdSaga} from \"../../Redux/Persons/PersonsReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from './charListsStyle.module.scss'\r\nimport { setLocationIdSaga } from \"../../Redux/location/LocationReducer\";\r\n\r\n\r\ninterface Props {\r\n    chars: charsResponseType\r\n\r\n}\r\n\r\nconst CharacterComponent: FC<Props> = ({\r\n                                           chars\r\n                                       }) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const locationId = chars.location.url.replace(/\\D+/gm, '')\r\n    console.log(locationId)\r\n    const callPage = () => {\r\n        dispatch(setPersonIdSaga(chars.id))\r\n    }\r\n    const callPageLoc = () => {\r\n        dispatch(setLocationIdSaga(+locationId))\r\n    }\r\n\r\n    return (<div className={style.items}>\r\n        <div className={style.wrapperItem}>\r\n            <img src={chars.image} alt={`there was images ${chars.name}`}/>\r\n            <NavLink to={`/person/${chars.id}`}>\r\n                <h1 onClick={callPage}>{chars.name}</h1>\r\n            </NavLink>\r\n            <h2>{chars.status} - {chars.species} </h2>\r\n            <h2 className={style.headlineCard}> Last known location: </h2>\r\n\r\n            <NavLink to={`/location/${locationId}`}>\r\n                <h1 onClick={callPageLoc}>{chars.location.name}</h1>\r\n            </NavLink>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default CharacterComponent\r\n\r\n","import React, {FC, memo, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/Store\";\r\nimport { nextPagesCall, setCharsSaga} from \"../../Redux/CharList/CharListReducer\";\r\nimport CharacterComponent from \"./CharacterComponent\";\r\nimport {charsResponseType} from \"../../Redux/Persons/PersonsReducer\";\r\nimport style from './charListsStyle.module.scss'\r\nimport HeaderComponent from \"../Header/HeaderComponent\";\r\n\r\n\r\nconst ChartListContainer: FC = memo(({\r\n\r\n                                       }) => {\r\n    const dispatch = useDispatch()\r\n    const chars = useSelector<AppRootStateType, Array<charsResponseType>>(state => state.charList.data)\r\n    const fetching = useSelector<AppRootStateType, boolean>(state => state.charList.isFetching)\r\n    const [pages, setPages] = useState<number>(2)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // get response to chars\r\n        dispatch(setCharsSaga(1))\r\n\r\n\r\n    }, [])\r\n\r\n    const scrollHandler = (e: any) => {\r\n        // scrollCalled  if in down - call\r\n        if ((e.target.documentElement.scrollHeight) - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            !fetching && //brake call\r\n            dispatch(nextPagesCall(pages))\r\n            setPages((p) => {\r\n                return p + 1\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollHandler)\r\n        return function () {\r\n            document.removeEventListener('scroll', scrollHandler)\r\n        }\r\n    }, [scrollHandler])\r\n\r\n\r\n    return (<div className={style.body}>\r\n        <div><HeaderComponent title = {'Rick and Morty Chars'} /></div>\r\n            {\r\n                chars.map((item, id) => {\r\n                    return <CharacterComponent key={id}\r\n                                               chars={item}/>\r\n                })\r\n            }\r\n\r\n\r\n    </div>)\r\n\r\n})\r\n\r\nexport default ChartListContainer","export default __webpack_public_path__ + \"static/media/Ellipsis-4.2s-197px.45b9dd44.svg\";","import preloader from \"../../img/Ellipsis-4.2s-197px.svg\";\r\nimport {FC} from \"react\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst Preloader:FC <Props> = ({\r\n\r\n                              }) => {\r\n    return <div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import  {ComponentType, Suspense} from \"react\";\r\nimport Preloader from \"../preloader/Preloader\";\r\n\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <Suspense fallback={<div><Preloader/></div>} >\r\n            <WrappedComponent {...props} />\r\n        </Suspense>\r\n    }\r\n}","import React, {FC, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/Store\";\r\nimport {getResidentsSaga, setLocationIdSaga} from \"../../Redux/location/LocationReducer\";\r\nimport HeaderComponent from \"../Header/HeaderComponent\";\r\nimport {charsResponseType} from \"../../Redux/Persons/PersonsReducer\";\r\nimport CharacterComponent from \"../ChartList/CharacterComponent\";\r\nimport styles from \"../Persons/PersonsStyle.module.scss\";\r\nimport {v1} from \"uuid\";\r\n\r\nconst LocationComponent : FC = () => {\r\n\r\n\r\n    const loc = useSelector((state:AppRootStateType) => state.location.data)\r\n\r\n    const charsId = useSelector <AppRootStateType, number | undefined> (state => state.person.data?.id)\r\n\r\n\r\n    //id location\r\n    const {id} = useParams<{id:string}>()\r\n    const dispatch  = useDispatch()\r\n    const idResident = loc?.residents.map(resident => resident.replace(/\\D+/gm, ''))\r\n\r\n    console.log('loc id Resident:',idResident)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setLocationIdSaga(+id))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderComponent title = {loc?.name}/>\r\n            <div>\r\n               <span>\r\n                   <h1>Location: {loc?.name}</h1>\r\n                   <h1>Type: {loc?.type}</h1>\r\n               </span>\r\n            </div>\r\n            <div>\r\n                <h2>Created: {loc?.created}</h2>\r\n                <h2>Dimension: {loc?.dimension}</h2>\r\n            </div>\r\n            <div>\r\n                <form action=\"residents\">\r\n                    <h1>Residents:</h1>\r\n                    <select name='resident'>\r\n                        {\r\n                            loc?.residents.map((e, index)=> {\r\n                                return <option key={index}>{e}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </form>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default LocationComponent;","import React, {FC, lazy} from 'react'\r\nimport ChartListContainer from \"./Component/ChartList/ChartListContainer\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport {withSuspense} from \"./common/withSuspense/withSuspense\";\r\nimport {RoutingType} from \"./enum/Routing\";\r\nimport style from './appStyles.module.scss'\r\nimport LocationComponent from \"./Component/Location/LocationComponent\";\r\n\r\n\r\n const PersonsContainer = lazy(():any  => import (\"./Component/Persons/PersonsContainer\"));\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    return (<div className={style.body}>\r\n        <div>\r\n\r\n        </div>\r\n\r\n        <div className={style.root}>\r\n            <Switch>\r\n                <Route className = {style.body} exact path={RoutingType.person} render={() => <ChartListContainer/>}/>\r\n                <Route exact path={RoutingType.personId} render={withSuspense(PersonsContainer)}/>\r\n                <Route exact path={RoutingType.locationId} render={withSuspense(LocationComponent)}/>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to=\"/person\"/>}/>\r\n                <Route path={RoutingType.error} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\r\n                <Redirect from={'*'} to={RoutingType.error}/>\r\n            </Switch>\r\n        </div>\r\n\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default App;\r\n","import {put, call} from 'redux-saga/effects'\r\nimport {ActionType, addCharsSaga, isFetchingLoader, setChars} from \"./CharListReducer\";\r\n\r\n//------------------------------API-------------------------------\r\n//for chartListContainer\r\nexport async function fetchGetChars(nextPage: number) {\r\n    const res = await fetch(`https://rickandmortyapi.com/api/character?page=${nextPage}`)\r\n    return   await res.json()\r\n}\r\n\r\n// -----------------------------SAGA-------------------------------\r\n//ChartListContainer\r\nexport function* getChars(action:{type: ActionType.REQUEST_CHARS,  payload: number  }  ) {\r\n    try {\r\n        yield put(isFetchingLoader(true))\r\n        const payload = yield call (fetchGetChars,  action.payload )\r\n        yield put(setChars(payload.results))\r\n        yield put (isFetchingLoader(false))\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n\r\n}\r\nexport function* nextChars(action:{type:  ActionType.REQUEST_CHARS_NEXT_PAGE,  payload: number  }  ) {\r\n    try {\r\n        yield put(isFetchingLoader(true))\r\n        const payload = yield call (fetchGetChars,  action.payload )\r\n        yield put(addCharsSaga(payload.results))\r\n        yield put (isFetchingLoader(false))\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {ActionType, setPerson} from \"./PersonsReducer\";\r\nimport {call, put} from \"redux-saga/effects\";\r\n\r\n\r\n\r\nasync function fetchGetPerson(id: number) {\r\n\r\n    const res = await fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n    return await res.json()\r\n}\r\n\r\n\r\nexport function* getPersons(action: { type: ActionType.REQUEST_PERSON, payload: number }) {\r\n    try {\r\n        const payload = yield call(fetchGetPerson, action.payload)\r\n        yield   put(setPerson(payload))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {call, put} from \"redux-saga/effects\";\r\nimport {ActionType, setResidents, setLocation} from \"./LocationReducer\";\r\n\r\n\r\n\r\nasync function fetchGetLocation(id: number) {\r\n\r\n    const res = await fetch(`https://rickandmortyapi.com/api/location/${id}`)\r\n    return await res.json()\r\n}\r\nasync function fetchGetResidents(id: number | undefined) {\r\n    const res = await fetch (`https://rickandmortyapi.com/api/character/${id}`)\r\n    return await res.json()\r\n}\r\n\r\nexport function* getLocation(action: { type: ActionType.SET_LOCATION, payload: number }) {\r\n    try {\r\n        const location = yield call(fetchGetLocation, action.payload)\r\n        yield   put(setLocation(location))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* getResident (action: {type: ActionType.GET_RESIDENTS, payload: number | undefined}) {\r\n\r\n    try{\r\n        const payload = yield call (fetchGetResidents, action.payload)\r\n        yield put(setResidents(payload.results))\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {takeEvery} from \"redux-saga/effects\";\r\nimport {ActionType as EnumCharList} from \"./CharList/CharListReducer\";\r\nimport {getChars, nextChars} from \"./CharList/Sagas\";\r\nimport {ActionType as EnumPerson} from \"./Persons/PersonsReducer\";\r\nimport {ActionType as EnumLocation}  from \"./location/LocationReducer\";\r\nimport {getPersons} from \"./Persons/Sagas\";\r\nimport {getLocation, getResident} from \"./location/Sagas\";\r\n\r\n\r\n//------------------WATCHER-----------------------------\r\n\r\n\r\nexport function* sagaWatcher(){\r\n    //ChartListContainer\r\n    yield takeEvery(EnumCharList.REQUEST_CHARS, getChars)\r\n    yield takeEvery(EnumCharList.NEXT_PAGE, nextChars)\r\n\r\n    //PersonsContainer\r\n    yield takeEvery(EnumPerson.REQUEST_PERSON, getPersons)\r\n\r\n    yield takeEvery(EnumLocation.REQUEST_LOCATION, getLocation)\r\n    yield takeEvery(EnumLocation.REQUEST_GET_RESIDENTS, getResident)\r\n\r\n\r\n\r\n}","import { combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport CharListReducer from \"./CharList/CharListReducer\";\r\nimport {sagaWatcher} from \"./sagaWatcher\";\r\nimport PersonReducer from \"./Persons/PersonsReducer\";\r\nimport LocationReducer from \"./location/LocationReducer\";\r\n\r\n\r\n\r\nexport const reducer = combineReducers({\r\n    charList: CharListReducer,\r\n    person: PersonReducer,\r\n    location:LocationReducer\r\n})\r\n\r\n\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n// mount it on the Store\r\nexport const store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(sagaMiddleware)\r\n    )\r\n);\r\n\r\n// then run the saga\r\nsagaMiddleware.run(sagaWatcher)\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\n// render the application\r\n//@ts-ignore\r\nwindow.store = store;","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {store} from \"./Redux/Store\";\r\n\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store} >\r\n                    <App  />\r\n                </Provider>\r\n                </BrowserRouter>\r\n        </React.StrictMode>,\r\n\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}