{"version":3,"sources":["Redux/Persons/PersonsReducer.ts","Component/ChartList/charListsStyle.module.scss","appStyles.module.scss","Component/Header/HeaderComponent.tsx","Component/Header/haderStyle.module.scss","Redux/CharList/CharListReducer.ts","enum/Routing.ts","Component/ChartList/CharacterComponent.tsx","Component/ChartList/ChartListContainer.tsx","img/Ellipsis-4.2s-197px.svg","common/preloader/Preloader.tsx","App.tsx","common/withSuspense/withSuspense.tsx","Redux/CharList/Sagas.ts","Redux/Persons/Sagas.ts","Redux/sagaWatcher.ts","Redux/Store.ts","index.tsx"],"names":["ActionType","initialState","data","setPerson","type","SET_PERSON","payload","setPersonIdSaga","id","REQUEST_PERSON","PersonReducer","state","action","module","exports","HeaderComponent","title","className","style","body","isFetching","RoutingType","isFetchingLoader","IS_FETCHING","charListReducer","SET_CHARS","REQUEST_CHARS_NEXT_PAGE","CharacterComponent","chars","dispatch","useDispatch","items","wrapperItem","src","image","alt","name","to","onClick","status","species","headlineCard","location","ChartListContainer","memo","useSelector","charList","fetching","useState","pages","setPages","useEffect","nextPage","REQUEST_CHARS","scrollHandler","e","next","target","documentElement","scrollHeight","scrollTop","window","innerHeight","NEXT_PAGE","p","document","addEventListener","removeEventListener","map","item","Preloader","preloader","PersonsContainer","lazy","App","root","exact","path","person","render","personId","WrappedComponent","props","fallback","error","from","getChars","nextChars","fetchGetChars","a","fetch","res","json","put","call","results","console","log","getPersons","fetchGetPerson","sagaWatcher","takeEvery","EnumCharList","EnumPerson","reducer","combineReducers","CharListReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a9fc0226.chunk.js","sourcesContent":["export interface charsResponseType {\r\n    id: number,\r\n    name: string,\r\n    status: \"alive\" | \"dead\" | \"unknown\",\r\n    species: string,\r\n    type: string,\r\n    image: string,\r\n    gender: \"female\" | \"male\" | \"unknown\",\r\n    origin: {\r\n        name: string,\r\n        url: string,\r\n    },\r\n    location: {\r\n        name: string,\r\n        url: string,\r\n    },\r\n    episode: string[],\r\n    created: string,\r\n\r\n\r\n}\r\n\r\nexport interface stateProps {\r\n    data: charsResponseType | null\r\n\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    data: null,\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_PERSON = \"PERSON-CONTAINER/SET-PERSON\",\r\n\r\n\r\n    //sagaRequest\r\n    REQUEST_PERSON = \"/CHARACTER-CONTAINER/REQUEST_PERSON\",\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n//ActionCreator\r\nexport const setPerson = (data: charsResponseType): Action<charsResponseType> => ({\r\n    type: ActionType.SET_PERSON,\r\n    payload: data\r\n})\r\n\r\n\r\n\r\n\r\n//sagaCreator\r\nexport const setPersonIdSaga = (id: number) : {type: ActionType.REQUEST_PERSON, payload: number} => ({\r\n    type: ActionType.REQUEST_PERSON,\r\n    payload: id\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PersonReducer = (state: stateProps = initialState, action: Action<charsResponseType>): stateProps => {\r\n    switch (action.type) {\r\n\r\n\r\n        case ActionType.SET_PERSON:{\r\n            debugger\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        }\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport default PersonReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"charListsStyle_body__1bRyu\",\"wrapperItem\":\"charListsStyle_wrapperItem__2iWfQ\",\"items\":\"charListsStyle_items__3CUUn\",\"imagesBlock\":\"charListsStyle_imagesBlock__2_XOs\",\"headlineCard\":\"charListsStyle_headlineCard__1-7h2\",\"alive\":\"charListsStyle_alive__2sJLn\",\"dead\":\"charListsStyle_dead__3JpAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"appStyles_body__k8keh\",\"root\":\"appStyles_root__3YxLz\"};","import {FC} from \"react\";\r\nimport style from './haderStyle.module.scss'\r\n\r\n\r\ninterface Props {\r\n    title: string | undefined\r\n\r\n\r\n}\r\n\r\n\r\nconst HeaderComponent: FC <Props>= ({\r\n    title\r\n                                    }) => {\r\n    return (<div className={style.body}>\r\n        <h1>{title}</h1>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default HeaderComponent","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"haderStyle_body__1CCKz\"};","import {charsResponseType} from \"../Persons/PersonsReducer\";\r\n\r\n\r\nexport interface stateProps {\r\n    data: charsResponseType[]\r\n    isFetching: boolean\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    data: [],\r\n    isFetching: false\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_CHARS = \"CHARACTER-COMPONENT/SET-CHARS\",\r\n    IS_FETCHING = \"IN_GLOBAL\",\r\n    NEXT_PAGE = 'CHARACTER-COMPONENT/NEXT_PAGE',\r\n\r\n\r\n    //sagaRequest\r\n    REQUEST_CHARS = \"/CHARACTER-CONTAINER/REQUEST_CHARS\",\r\n    REQUEST_CHARS_NEXT_PAGE = 'CHARACTER_CONTAINER/REQUEST_CHARS_NEXT_PAGE',\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n//ActionCreator\r\n//inGlobal\r\nexport const isFetchingLoader = (isFetching: boolean): Action<boolean> => ({\r\n    type: ActionType.IS_FETCHING,\r\n    payload: isFetching\r\n})\r\n\r\n\r\n//for Request\r\nexport const setChars = (chars: charsResponseType[]): Action<charsResponseType[]> => ({\r\n    type: ActionType.SET_CHARS,\r\n    payload: chars\r\n})\r\n\r\n\r\nexport const nextPagesCall = (next: number): Action<number> => ({\r\n    type: ActionType.NEXT_PAGE,\r\n    payload: next\r\n})\r\n\r\n\r\n//sagaCreator\r\nexport const setCharsSaga = (nextPage: number): { type: ActionType.REQUEST_CHARS, payload: number } => ({\r\n    type: ActionType.REQUEST_CHARS,\r\n    payload: nextPage\r\n\r\n})\r\nexport const addCharsSaga = (chars: charsResponseType[]): Action<charsResponseType[]> => ({\r\n    type: ActionType.REQUEST_CHARS_NEXT_PAGE,\r\n    payload: chars\r\n})\r\n\r\n\r\n\r\n\r\nconst charListReducer = (state: stateProps = initialState, action: Action<charsResponseType[] & boolean>): stateProps => {\r\n    switch (action.type) {\r\n        //getChars from response\r\n        case ActionType.SET_CHARS:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        case ActionType.REQUEST_CHARS_NEXT_PAGE:\r\n            return {\r\n                ...state, data: [...state.data, ...action.payload]\r\n            };\r\n        //isLoader fetching for brake call\r\n        case ActionType.IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport default charListReducer\r\n\r\n","export enum RoutingType {\r\n    person=\"/person\",\r\n    personId = \"/person/:id\",\r\n    error=\"/404\"\r\n}","import {FC} from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {charsResponseType, setPersonIdSaga} from \"../../Redux/Persons/PersonsReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from './charListsStyle.module.scss'\r\n\r\n\r\ninterface Props {\r\n    chars: charsResponseType\r\n\r\n}\r\n\r\nconst CharacterComponent: FC<Props> = ({\r\n                                           chars\r\n                                       }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const callPage = () => {\r\n        dispatch(setPersonIdSaga(chars.id))\r\n\r\n    }\r\n    return (<div className={style.items}>\r\n        <div className={style.wrapperItem}>\r\n            <img src={chars.image} alt={`there was images ${chars.name}`}/>\r\n            <NavLink to={`/person/${chars.id}`}>\r\n                <h1 onClick={callPage}>{chars.name}</h1>\r\n            </NavLink>\r\n            <h2>{chars.status} - {chars.species} </h2>\r\n            <h2 className={style.headlineCard}> Last known location: </h2>\r\n            <h2>{chars.location.name}</h2>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default CharacterComponent\r\n\r\n","import React, {FC, memo, useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../Redux/Store\";\nimport { nextPagesCall, setCharsSaga} from \"../../Redux/CharList/CharListReducer\";\nimport CharacterComponent from \"./CharacterComponent\";\nimport {charsResponseType} from \"../../Redux/Persons/PersonsReducer\";\nimport style from './charListsStyle.module.scss'\nimport HeaderComponent from \"../Header/HeaderComponent\";\n\n\nconst ChartListContainer: FC = memo(({\n\n                                       }) => {\n    const dispatch = useDispatch()\n    const chars = useSelector<AppRootStateType, Array<charsResponseType>>(state => state.charList.data)\n    const fetching = useSelector<AppRootStateType, boolean>(state => state.charList.isFetching)\n    const [pages, setPages] = useState<number>(2)\n\n\n\n    useEffect(() => {\n        // get response to chars\n        dispatch(setCharsSaga(1))\n\n\n    }, [])\n\n    const scrollHandler = (e: any) => {\n        // scrollCalled  if in down - call\n        if ((e.target.documentElement.scrollHeight) - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\n            !fetching && //brake call\n            dispatch(nextPagesCall(pages))\n            setPages((p) => {\n                return p + 1\n            })\n        }\n\n    }\n\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler)\n        return function () {\n            document.removeEventListener('scroll', scrollHandler)\n        }\n    }, [scrollHandler])\n\n\n    return (<div className={style.body}>\n        <div><HeaderComponent title = {'Rick and Morty Chars'} /></div>\n            {\n                chars.map((item, id) => {\n                    return <CharacterComponent key={id}\n                                               chars={item}/>\n                })\n            }\n\n\n    </div>)\n\n})\n\nexport default ChartListContainer","export default __webpack_public_path__ + \"static/media/Ellipsis-4.2s-197px.ce28a318.svg\";","import preloader from \"../../img/Ellipsis-4.2s-197px.svg\";\r\nimport {FC} from \"react\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst Preloader:FC <Props> = ({\r\n\r\n                              }) => {\r\n    return <div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React, {FC, lazy} from 'react'\r\nimport ChartListContainer from \"./Component/ChartList/ChartListContainer\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport {withSuspense} from \"./common/withSuspense/withSuspense\";\r\nimport {RoutingType} from \"./enum/Routing\";\r\nimport style from './appStyles.module.scss'\r\n\r\n\r\n const PersonsContainer = lazy(():any  => import (\"./Component/Persons/PersonsContainer\"));\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    return (<div className={style.body}>\r\n        <div>\r\n\r\n        </div>\r\n\r\n        <div className={style.root}>\r\n            <Switch>\r\n                <Route className = {style.body} exact path={RoutingType.person} render={() => <ChartListContainer/>}/>\r\n                <Route exact path={RoutingType.personId} render={withSuspense(PersonsContainer)}/>\r\n                <Route path={RoutingType.error} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={RoutingType.person}/>}/>\r\n                <Redirect from={'*'} to={RoutingType.error}/>\r\n            </Switch>\r\n        </div>\r\n\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default App;\r\n","import  {ComponentType, Suspense} from \"react\";\r\nimport Preloader from \"../preloader/Preloader\";\r\n\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <Suspense fallback={<div><Preloader/></div>} >\r\n            <WrappedComponent {...props} />\r\n        </Suspense>\r\n    }\r\n}","import {put, call} from 'redux-saga/effects'\r\nimport {ActionType, addCharsSaga, isFetchingLoader, setChars} from \"./CharListReducer\";\r\n\r\n//------------------------------API-------------------------------\r\n//for chartListContainer\r\nexport async function fetchGetChars(nextPage: number) {\r\n    const res = await fetch(`https://rickandmortyapi.com/api/character?page=${nextPage}`)\r\n    return   await res.json()\r\n}\r\n\r\n// -----------------------------SAGA-------------------------------\r\n//ChartListContainer\r\nexport function* getChars(action:{type: ActionType.REQUEST_CHARS,  payload: number  }  ) {\r\n    try {\r\n        yield put(isFetchingLoader(true))\r\n        const payload = yield call (fetchGetChars,  action.payload )\r\n        yield put(setChars(payload.results))\r\n        yield put (isFetchingLoader(false))\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n\r\n}\r\nexport function* nextChars(action:{type:  ActionType.REQUEST_CHARS_NEXT_PAGE,  payload: number  }  ) {\r\n    try {\r\n        yield put(isFetchingLoader(true))\r\n        const payload = yield call (fetchGetChars,  action.payload )\r\n        yield put(addCharsSaga(payload.results))\r\n        yield put (isFetchingLoader(false))\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {ActionType, setPerson} from \"./PersonsReducer\";\r\nimport {call, put} from \"redux-saga/effects\";\r\n\r\n\r\n\r\nasync function fetchGetPerson(id: number) {\r\n\r\n    const res = await fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n    return await res.json()\r\n}\r\n\r\n\r\nexport function* getPersons(action: { type: ActionType.REQUEST_PERSON, payload: number }) {\r\n    try {\r\n        const payload = yield call(fetchGetPerson, action.payload)\r\n        yield   put(setPerson(payload))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {takeEvery} from \"redux-saga/effects\";\r\nimport {ActionType as EnumCharList} from \"./CharList/CharListReducer\";\r\nimport {getChars, nextChars} from \"./CharList/Sagas\";\r\nimport {ActionType as EnumPerson} from \"./Persons/PersonsReducer\";\r\nimport {getPersons} from \"./Persons/Sagas\";\r\n\r\n\r\n//------------------WATCHER-----------------------------\r\n\r\n\r\nexport function* sagaWatcher(){\r\n    //ChartListContainer\r\n    yield takeEvery(EnumCharList.REQUEST_CHARS, getChars)\r\n    yield takeEvery(EnumCharList.NEXT_PAGE, nextChars)\r\n\r\n    //PersonsContainer\r\n    yield takeEvery(EnumPerson.REQUEST_PERSON, getPersons)\r\n\r\n\r\n}","import { combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport CharListReducer from \"./CharList/CharListReducer\";\r\nimport {sagaWatcher} from \"./sagaWatcher\";\r\nimport PersonReducer from \"./Persons/PersonsReducer\";\r\n\r\n\r\n\r\nexport const reducer = combineReducers({\r\n    charList: CharListReducer,\r\n    person: PersonReducer\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n// mount it on the Store\r\nexport const store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(sagaMiddleware)\r\n    )\r\n);\r\n\r\n// then run the saga\r\nsagaMiddleware.run(sagaWatcher)\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\n// render the application\r\n//@ts-ignore\r\nwindow.store = store;","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {store} from \"./Redux/Store\";\r\n\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store} >\r\n                    <App  />\r\n                </Provider>\r\n                </BrowserRouter>\r\n        </React.StrictMode>,\r\n\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}